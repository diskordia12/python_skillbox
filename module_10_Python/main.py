# Задача 1. Таблица умножения
# Напишите программу, которая выводит таблицу умножения для чисел от 1 до 9.
# Для этого используйте конструкцию вложенного цикла: внешний отвечает за первый множитель,
# а внутренний — за второй.
# Дополнение: выведите настоящую таблицу умножения, без всяких знаков, только числа.
# Чтобы она получилась красивой и ровной, используйте литерал \t внутри оператора end.
# \t — это литерал табуляции, благодаря ему все числа выстраиваются в виде таблицы.

# for a in range(1, 10):
#     for b in range(1, 10):
#         print(a * b, end = '\t')
#     print()

# Задача 2. Таблица суммы
# Напишите программу, которая запрашивает у пользователя число N и выводит таблицу суммы для чисел от 1 до N.

# N = int(input('Число пользователя: '))
#
# for a in range(N + 1):
#     for b in range(N + 1):
#         print(a + b, end = '\t')
#     print()

# Задача 3. Анализ данных
# Отдел анализа данных сегодня получил вот такую интересную штуку:
#
# 0	-1	-2	-3	-4	-5	-6	-7	-8	-9
# 1	0	-1	-2	-3	-4	-5	-6	-7	-8
# 2	1	0	-1	-2	-3	-4	-5	-6	-7
# 3	2	1	0	-1	-2	-3	-4	-5	-6
# 4	3	2	1	0	-1	-2	-3	-4	-5
# 5	4	3	2	1	0	-1	-2	-3	-4
# 6	5	4	3	2	1	0	-1	-2	-3
# 7	6	5	4	3	2	1	0	-1	-2
# 8	7	6	5	4	3	2	1	0	-1
# 9	8	7	6	5	4	3	2	1	0



#
# Вам, как работнику этого отдела, дали задание понять, как и почему такое произошло.
# Напишите программу, которая выводит на экран такую таблицу.

# for a in range(10):
#     for b in range(0, -10, -1):
#         print(a + b, end = '\t')
#     print()

# Другой способ
# for i in range(10):
#     for j in range(10):
#         if j <= i:
#             print(i-j, end='\t')
#         else:
#             print(i-j, end='\t')
#     print()

# Задача 1. Матрица
# Напишите программу, которая выводит квадратную матрицу размера N на N.
# В каждой нечётной строке матрицы идут числа от 1 до N, а в каждой чётной — просто числа,
# равные номеру этой строки.

# size = int(input('Введите размер матрицы одним числом: '))
#
# for row in range(1, size + 1):
#     for col in range(1, size + 1):
#         if row % 2== 0:
#             print(row, end = '\t')
#         else:
#             print(col, end = '\t')
#     print()
#
# Задача 2. Чёрный ящик
# Преподаватель показал студентам несколько результатов программы и сказал:
# «Кто догадается, что делает программа и как она это делает, получит зачёт автоматом».
# Студент Миша намерен получить этот зачёт.
# Он заметил, что в результатах программы есть определённая закономерность.

# size = int(input('Введите размер матрицы одним числом: '))
#
# for row in range(1, size + 1):
#     for col in range(1, size + 1):
#         if col % 3 == 0:
#             print(col, end = '\t')
#         else:
#             print(row, end = '\t')
#     print()

# Задача 3. Координатные оси
# Напишите программу, которая рисует координатные оси на поле 20×50.

# x_lim = 50
# y_lim = 20
#
# for y in range(y_lim):
#     for x in range(x_lim):
#         if y == y_lim // 2:
#             print('-', end='')
#         elif x == x_lim // 2:
#             print('|', end='')
#         else:
#             print(' ', end='')
#     print()

# # Вариант с вертикальной палочкой в середине:
# for y in range(y_lim):
#     for x in range(x_lim):
#         if x == x_lim // 2:  # Ключевое отличие в порядке проверок. Если сперва выполняется проверка на дефис, то именно дефис будет выбран.
#             print('|', end='')
#         elif y == y_lim // 2:
#             print('-', end='')
#         else:
#             print(' ', end='')
#     print()

# Задача 1. Врата
# Напишите программу, которая выводит в консоль «врата», состоящие из тире, вертикальных линий и пробелов.
# Поле состоит из 20 строк и 30 столбцов (но не стесняйтесь пробовать и другие размеры).

# for row in range(20):
#     for col in range(30):
#         if row == 0:
#             print('-', end = '')
#         elif col == 0 or col == 29:
#             print('|', end = '')
#         else:
#             print(' ', end = '')
#     print()

# Задача 2. Дорога
# Мы делаем текстовую игру — гонку, и нам нужно вывести на экран что-то вроде трассы,
# где будут соревноваться наши машины. Напишите программу,
# которая выводит такую дорогу на экран (поле 20×50).

# x_lim = 50
# y_lim = 20
#
# delta = 6  # число 3 выбрано "на глаз", в зависимости от него дорога будет шире/уже
#
# for y in range(y_lim):
#     for x in range(x_lim):
#         if y == y_lim // 2:
#             print('-', end='')
#         elif x == x_lim // 2:
#             print('|', end='')
#         elif x == x_lim // 2 - (delta + y):
#             print('/', end='')
#         elif x == x_lim // 2 + (delta + y):
#             print('\\', end='')  # \ - символ который используется для экранирования, поэтому его пришлось дублировать
#         else:
#             print(' ', end='')
#     print()

# Задача 3. Диагональная матрица
# Напишите программу, которая получает на вход размер квадратной матрицы и выводит на экран по такому принципу диагональ
# из единиц с левого нижнего угла до верхнего правого, ниже диагонали — двойки, выше — нули.

# n = int(input("Введите размер матрицы: "))
#
# for y in range(n):
#     for x in range(n):
#         buf_x = (n - 1) - y  # вспомогательное число, которое будет уменьшаться от n-1 до 0
#         if buf_x > x:
#             print(0, end='\t')
#         elif buf_x == x:
#             print(1, end='\t')
#         else:
#             print(2, end='\t')
#     print()

# Задача 1. Электронная очередь
# Нам дали заказ написать программу для электронной очереди.
# У каждого человека в очереди есть номер: нулевой, первый, второй, третий и так далее.
# Каждый час очередь уменьшается на одного человека, то есть уходит сначала нулевой номер,
# затем первый, второй и так далее. Наша программа получает на вход одно число — количество людей
# в очереди — и выводит на экран историю обслуживания очереди: какие номера в какой час оставались.

# people = int(input('Количество людей в очереди: '))
#
# for hour in range(people + 1):
#     print(f'Идет {hour} час')
#     for pep in range(hour, people):
#         print(f'Номер в очереди: {pep}')
#     print()
#
# print('Очередь обслужена!')

# Задача 2. Цифры больше пяти
# Пользователь вводит последовательность из N чисел.
# Напишите программу, которая подсчитывает общее количество цифр больше пяти во всей последовательности.

# N_amount = int(input('Сколько будет чисел: '))
# numeral_count = 0
#
# for num in range(N_amount):
#     number = int(input(f'Введите {N_amount} число:'))
#     while number > 0:
#         if number % 10 > 5:
#             numeral_count += 1
#         number //= 10
#
# print(f'Общее кол-во цифр больше пяти: {numeral_count}')

# Задача 3. Лестница чисел
# Пользователь вводит число N. Напишите программу, которая по этому числу выводит вот такую
# лестницу из чисел:

# N = int(input('Введите число для лестницы: '))
#
# for start in range(N + 1):
#     for number in range(start, N + 1):
#         print(number, end = '\t')
#     print()