"""
Задача 5. Список списков — 2
Вы уже работали с многомерными списками и решали задачи, где с помощью list comprehensions
«выпрямляли» многомерные списки в один.
Это не получится, если списков неограниченное количество и у элементов разные уровни вложенности.

Дан такой список:
nice_list = [1, 2, [3, 4], [[5, 6, 7], [8, 9, 10]], [[11, 12, 13], [14, 15], [16, 17, 18]]]

Напишите рекурсивную функцию, которая раскрывает все вложенные списки,
то есть оставляет только внешний список.
Ответ: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]

Функция должна получать список и возвращать его раскрытую версию
(не нужно добавлять элементы в список, записанный в глобальную переменную, созданную снаружи функции).

Подсказка
Можно возвращать списки и срезы списков.
"""


def open_list(seq: list) -> list:
    if not seq:
        return seq

    if isinstance(seq[0], list):
        return open_list(seq[0]) + open_list(seq[1:])

    return seq[:1] + open_list(seq[1:])


nice_list = [1, 2, [3, 4], [[5, 6, 7], [8, 9, 10]], [[11, 12, 13], [14, 15], [16, 17, 18]]]
nice_list_2 = ([1, 2])
print(open_list(nice_list))
